server:
  port: 8888
spring:
  application:
    name: gateway-service
    # 配置路由： 可以反向代理目标微服务  统一访问入口
  cloud:
    gateway:

    # 网关自动从注册的注册中心中拉取服务配置生成路由
      # http://localhost:8888/GULI-ORDER/order/create/10010/1001/1
      # 如果访问网关时 路径中使用了注册中心要访问服务的名称+该服务的资源路径 网关可以将请求路由到目标服务
#      discovery:
#        locator:
#          enabled: true
      routes: # 自定义路由配置集合
#        - id: order-route    # 一个路由的唯一标识
#          # 地址写死
#          uri: http://localhost:8082              # 当前路由映射的目标服务器地址
#          predicates:
#            # 断言：  路径断言  当访问网关的请求路径中以/order开始 就交给uri的服务器处理
#            - Path=/order/**
        - id: stock-route
          # lb代表ribbon的负载均衡模块  GULI-STOCK表示路由的目标服务在注册中心的名称
          uri: lb://GULI-STOCK
          predicates:
            - Path=/stock/**
          filters:
            - addToken
          # 配置过滤器 对当前服务的请求进行过滤
#          filters:
#            -
        - id: order-route
          # lb代表ribbon的负载均衡模块  GULI-STOCK表示路由的目标服务在注册中心的名称
          uri: lb://GULI-ORDER
          predicates:
            # 根据域名断言
            - Host=www.guli.order:8888
            - Cookie=token,123456
        - id: order-route2
          # lb代表ribbon的负载均衡模块  GULI-STOCK表示路由的目标服务在注册中心的名称
          uri: lb://GULI-ORDER
          predicates:
            # 根据域名断言
            - Path=/order/**
eureka:
  instance:
    ip-address: localhost
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: http://localhost:9000/eureka/
